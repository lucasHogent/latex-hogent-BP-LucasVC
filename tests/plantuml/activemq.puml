@startuml
!include <C4/C4_Deployment.puml>

HIDE_STEREOTYPE()
LAYOUT_TOP_DOWN()

title Test activemq (Dataflow Diagram)

Node(activemqserver, "ActiveMQ Server Docker", "RedHat", "container name: amq") {
     
    Container(activemqserver_listeners, "Java Bridge [1-19]", "Java JRE 17", "/opt/jprogram/start_listener.sh")
    
    Node(activemqserver_activemqbroker, "ActiveMQ Broker", "ActiveMQ 6.1.4", "console: 8161", MsgContainer) {
        ContainerQueue(activemqserver_activemqbroker_toplc, "ToPLC", "Queue")
        ContainerQueue(activemqserver_activemqbroker_fromplc, "FromPLC", "Queue")
        Container(activemqserver_activemqbroker_jmxexport, "JMX exporter", "Java")
    }
}

Node(plcsimulator, "PLC simulator Docker", "Python", "container name: plc"){
  Container(plcsimulator_process, "PLC simulator channel[1-19]", "Python 3.9", "plc-simulator.py")
}

Node(prometheusserver, "Prometheus server Docker", "", "container name: prometheus"){
  Container(prometheusserver_process, "Prometheus", "", "console: 9080")
}

Node(wcsserver, "WCS server [1-7]", "Windows", ""){
  Container(wcsserver_process, "WCS service", "Progress 4gl", "start_wcs_[1-7].p")
}

Rel_U(activemqserver_listeners, activemqserver_activemqbroker_fromplc, "", "openwire 61616")
Rel_U(activemqserver_activemqbroker_toplc,activemqserver_listeners , "", "openwire 61616")

Rel_U(wcsserver_process, activemqserver_activemqbroker_toplc, "", "amqp 5672") 
Rel_U(activemqserver_activemqbroker_fromplc, wcsserver_process, "", "amqp 5672") 

Rel_U(activemqserver_activemqbroker_jmxexport, prometheusserver_process, "", "port 8020")
BiRel(plcsimulator_process, activemqserver_listeners, "sends to\nreceives from", "port 80[01-19]")

@enduml