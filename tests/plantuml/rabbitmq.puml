@startuml
!include <C4/C4_Deployment.puml>

HIDE_STEREOTYPE()
LAYOUT_TOP_DOWN()

title Test RabbitMQ (Dataflow Diagram)

Node(rabbitmqserver, "RabbitMQ Server Docker", "RedHat", Docker container) {
     
    Container(rabbitmqserver_listeners, "Java Bridge PLC [1-19]", "Java JRE 17", "/opt/jprogram/start_listener.sh")
    
    Node(rabbitmqserver_rabbitmqbroker, "RabbitMQ Broker", "RabbitMQ 3.0", MsgContainer) {
        ContainerQueue(rabbitmqserver_rabbitmqbroker_toplc, "ToPLC[1-19]", "Queue")
        ContainerQueue(rabbitmqserver_rabbitmqbroker_fromplc, "FromPLC[1-19]", "Queue")
        Container(rabbitmqserver_rabbitmqbroker_monitor, "RabbitMQ monitor manager")
    }
}

Node(plcsimulator, "PLC simulator Docker", "Python", "container name: plc"){
  Container(plcsimulator_process, "PLC simulator channel[1-19]", "Python 3.9", "plc-simulator.py")
}
Node(prometheusserver, "Prometheus server Docker", "", "container name: prometheus"){
  Container(prometheusserver_process, "Prometheus", "", "console: 9080")
}
Node(wcsserver, "WCS server [1-7]", "Windows", ""){
  Container(wcsserver_process, "WCS service", "Progress 4gl", "start_wcs_[1-7].p")
}

Rel_U(rabbitmqserver_listeners, rabbitmqserver_rabbitmqbroker_fromplc, "", "amqp 5672")
Rel_U(rabbitmqserver_rabbitmqbroker_toplc, rabbitmqserver_listeners, "", "amqp 5672")

Rel_U(wcsserver_process, rabbitmqserver_rabbitmqbroker_toplc, "", "amqp 5672") 
Rel_U(rabbitmqserver_rabbitmqbroker_fromplc, wcsserver_process, "", "amqp 5672") 
Rel_U(rabbitmqserver_rabbitmqbroker_monitor, prometheusserver_process, "", "port 15692")
BiRel(plcsimulator_process, rabbitmqserver_listeners,  "sends to\nreceives from", "port 80[01-19]")

@enduml