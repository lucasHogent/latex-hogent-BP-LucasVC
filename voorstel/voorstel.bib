@Book{MarkRichards2021,
  author    = {Mark Richards and Neal Ford},
  date      = {2021-02-12},
  title     = {Fundamentals of Software Architecture},
  edition   = {First edition},
  editor    = {O'REILLY},
  isbn      = {9781492043454},
  location  = {Beijing},
  note      = {Unitary Architecture},
  pagetotal = {1421},
  publisher = {O'REILLY},
  subtitle  = {An engineering approach},
  owner     = {Humble bundle},
  ppn_gvk   = {1694274179},
  timestamp = {2021.02.12},
  year      = {2021},
}

@Book{Newman2020,
  author    = {Newman, Sam},
  date      = {2020},
  title     = {Monolith to microservices},
  edition   = {First edition},
  isbn      = {9781492047841},
  location  = {Beijing},
  pagetotal = {255},
  publisher = {O'Reilly},
  subtitle  = {Evolutionary patterns to transform your monolith},
  ppn_gvk   = {1683876180},
}

@Article{Sharvari2019,
  author      = {Sharvari and Nag Sowmya},
  date        = {2019-12-08},
  title       = {A study on Modern Messaging Systems- Kafka, RabbitMQ and NATS Streaming},
  doi         = {10.48550/ARXIV.1912.03715},
  eprint      = {1912.03715},
  eprintclass = {cs.DC},
  eprinttype  = {arXiv},
  abstract    = {Distributed messaging systems form the core of big data streaming, cloud native applications and microservice architecture. With real-time critical applications there is a growing need for well-built messaging platform that is scalable, fault tolerant and has low latency. There are multiple modern messaging systems that have come up in the recent past, all with their own pros and cons. This has become problematic for the industry to decide which messaging system is the most suitable for a specific application. An in-depth study is required to decide which features of a messaging system meet the needs of the application. This survey paper outlines the modern messaging technologies and delves deep on three popular publisher/subscriber systems- Apache Kafka, RabbitMQ and NATS Streaming. The paper provides information about messaging systems, the use cases, similarities and differences of features to facilitate users to make an informed decision and also pave way for future research and development.},
  copyright   = {arXiv.org perpetual, non-exclusive license},
  file        = {:Sharvari2019 - A Study on Modern Messaging Systems Kafka, RabbitMQ and NATS Streaming.pdf:PDF:http\://arxiv.org/pdf/1912.03715v1},
  keywords    = {Distributed / Parallel / Cluster Computing (cs.DC), FOS: Computer and information sciences},
  publisher   = {arXiv},
  year        = {2019},
}

@Book{Bellemare2020,
  author    = {Bellemare, Adam},
  date      = {2020},
  title     = {Building event-driven microservices},
  edition   = {First edition},
  isbn      = {9781492057864},
  location  = {Beijing},
  pagetotal = {1304},
  publisher = {O'Reilly},
  subtitle  = {Leveraging organizational data at scale},
  ppn_gvk   = {1737614650},
}

@Article{Dinari2020,
  author       = {Dinari, Hamed},
  date         = {2020-04},
  journaltitle = {International Journal of Modern Education and Computer Science},
  title        = {Inter-Process Communication (IPC) in Distributed Environments: An Investigation and Performance Analysis of Some Middleware Technologies},
  doi          = {10.5815/ijmecs.2020.02.05},
  issn         = {2075-017X},
  number       = {2},
  pages        = {36--52},
  volume       = {12},
  publisher    = {MECS Publisher},
}

@Article{Stonebraker2002,
  author       = {Stonebraker, Michael},
  date         = {2002-03},
  journaltitle = {ACM SIGMOD Record},
  title        = {Too much middleware},
  doi          = {10.1145/507338.507362},
  issn         = {0163-5808},
  number       = {1},
  pages        = {97--106},
  volume       = {31},
  publisher    = {Association for Computing Machinery (ACM)},
}

@Comment{jabref-meta: databaseType:biblatex;}
